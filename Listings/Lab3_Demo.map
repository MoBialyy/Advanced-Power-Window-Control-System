Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    basic_io.o(.text.vPrintString) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    basic_io.o(.text.vPrintString) refers to basic_io.o(.bss.cBuffer) for cBuffer
    basic_io.o(.text.vPrintString) refers to basic_io.o(.rodata.str1.1) for .L.str
    basic_io.o(.text.vPrintString) refers to printfa.o(i.__0sprintf) for sprintf
    basic_io.o(.text.vPrintString) refers to consoleprint.o(.text.consoleprint) for consoleprint
    basic_io.o(.text.vPrintString) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    basic_io.o(.ARM.exidx.text.vPrintString) refers to basic_io.o(.text.vPrintString) for [Anonymous Symbol]
    basic_io.o(.text.vPrintStringAndNumber) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    basic_io.o(.text.vPrintStringAndNumber) refers to basic_io.o(.bss.cBuffer) for cBuffer
    basic_io.o(.text.vPrintStringAndNumber) refers to basic_io.o(.rodata.str1.1) for .L.str.1
    basic_io.o(.text.vPrintStringAndNumber) refers to printfa.o(i.__0sprintf) for sprintf
    basic_io.o(.text.vPrintStringAndNumber) refers to consoleprint.o(.text.consoleprint) for consoleprint
    basic_io.o(.text.vPrintStringAndNumber) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    basic_io.o(.ARM.exidx.text.vPrintStringAndNumber) refers to basic_io.o(.text.vPrintStringAndNumber) for [Anonymous Symbol]
    basic_io.o(.text.vPrintStringAndNumbers) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    basic_io.o(.text.vPrintStringAndNumbers) refers to basic_io.o(.bss.cBuffer) for cBuffer
    basic_io.o(.text.vPrintStringAndNumbers) refers to basic_io.o(.rodata.str1.1) for .L.str.2
    basic_io.o(.text.vPrintStringAndNumbers) refers to printfa.o(i.__0sprintf) for sprintf
    basic_io.o(.text.vPrintStringAndNumbers) refers to consoleprint.o(.text.consoleprint) for consoleprint
    basic_io.o(.text.vPrintStringAndNumbers) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    basic_io.o(.ARM.exidx.text.vPrintStringAndNumbers) refers to basic_io.o(.text.vPrintStringAndNumbers) for [Anonymous Symbol]
    consoleprint.o(.text.consoleprint) refers to strlen.o(.text) for strlen
    consoleprint.o(.text.consoleprint) refers to retarget.o(.text.__write) for __write
    consoleprint.o(.ARM.exidx.text.consoleprint) refers to consoleprint.o(.text.consoleprint) for [Anonymous Symbol]
    main.o(.text.vEncoderTask) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vEncoderTask) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vEncoderTask) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.vEncoderTask) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vEncoderTask) refers to main.o(.data.encoderPos) for encoderPos
    main.o(.text.vEncoderTask) refers to main.o(.bss.encoderDirection) for encoderDirection
    main.o(.text.vEncoderTask) refers to printfa.o(i.__0snprintf) for snprintf
    main.o(.text.vEncoderTask) refers to tasks.o(.text.ulTaskGenericNotifyTake) for ulTaskGenericNotifyTake
    main.o(.text.vEncoderTask) refers to main.o(.data.window_state) for window_state
    main.o(.text.vEncoderTask) refers to main.o(.bss.xDriverWindowLowerTaskHandle) for xDriverWindowLowerTaskHandle
    main.o(.text.vEncoderTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.vEncoderTask) refers to main.o(.bss.xPassengerWindowLowerTaskHandle) for xPassengerWindowLowerTaskHandle
    main.o(.text.vEncoderTask) refers to tasks.o(.text.vTaskResume) for vTaskResume
    main.o(.text.vEncoderTask) refers to main.o(.bss.xDriverWindowElevateTaskHandle) for xDriverWindowElevateTaskHandle
    main.o(.text.vEncoderTask) refers to main.o(.bss.xPassengerWindowElevateTaskHandle) for xPassengerWindowElevateTaskHandle
    main.o(.ARM.exidx.text.vEncoderTask) refers to main.o(.text.vEncoderTask) for [Anonymous Symbol]
    main.o(.text.main) refers to ports_init.o(.text.PortA_Config) for PortA_Config
    main.o(.text.main) refers to ports_init.o(.text.PortC_Config) for PortC_Config
    main.o(.text.main) refers to ports_init.o(.text.PortF_Config) for PortF_Config
    main.o(.text.main) refers to lcd.o(.text.LCD_Init) for LCD_Init
    main.o(.text.main) refers to lcd.o(.text.LCD_SetBacklight) for LCD_SetBacklight
    main.o(.text.main) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.main) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str.5
    main.o(.text.main) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.main) refers to main.o(.text.ISRHandlers) for ISRHandlers
    main.o(.text.main) refers to gpio.o(i.GPIOIntRegister) for GPIOIntRegister
    main.o(.text.main) refers to gpio.o(i.GPIOIntTypeSet) for GPIOIntTypeSet
    main.o(.text.main) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    main.o(.text.main) refers to gpio.o(i.GPIOIntEnable) for GPIOIntEnable
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.xDriverWindowElevateTaskUnlockerSemaphore) for xDriverWindowElevateTaskUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xDriverWindowLowerTaskUnlockerSemaphore) for xDriverWindowLowerTaskUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xPassengerWindowElevateTaskUnlockerSemaphore) for xPassengerWindowElevateTaskUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xPassengerWindowLowerTaskUnlockerSemaphore) for xPassengerWindowLowerTaskUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xLockWindowsTaskUnlockerSemaphore) for xLockWindowsTaskUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xObstacleDetectionUnlockerSemaphore) for xObstacleDetectionUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xLowerLimitUnlockerSemaphore) for xLowerLimitUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xUpperLimitUnlockerSemaphore) for xUpperLimitUnlockerSemaphore
    main.o(.text.main) refers to main.o(.bss.xPassengerWindowElevateTaskHandle) for xPassengerWindowElevateTaskHandle
    main.o(.text.main) refers to main.o(.text.vPassengerWindowElevateTask) for vPassengerWindowElevateTask
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.bss.xPassengerWindowLowerTaskHandle) for xPassengerWindowLowerTaskHandle
    main.o(.text.main) refers to main.o(.text.vPassengerWindowLowerTask) for vPassengerWindowLowerTask
    main.o(.text.main) refers to main.o(.bss.xDriverWindowElevateTaskHandle) for xDriverWindowElevateTaskHandle
    main.o(.text.main) refers to main.o(.text.vDriverWindowElevateTask) for vDriverWindowElevateTask
    main.o(.text.main) refers to main.o(.bss.xDriverWindowLowerTaskHandle) for xDriverWindowLowerTaskHandle
    main.o(.text.main) refers to main.o(.text.vDriverWindowLowerTask) for vDriverWindowLowerTask
    main.o(.text.main) refers to main.o(.bss.xLockWindowsTaskHandle) for xLockWindowsTaskHandle
    main.o(.text.main) refers to main.o(.text.vLockWindows) for vLockWindows
    main.o(.text.main) refers to main.o(.bss.xUpperLimitActionHandle) for xUpperLimitActionHandle
    main.o(.text.main) refers to main.o(.text.vUpperLimitAction) for vUpperLimitAction
    main.o(.text.main) refers to main.o(.bss.xLowerLimitActionHandle) for xLowerLimitActionHandle
    main.o(.text.main) refers to main.o(.text.vLowerLimitAction) for vLowerLimitAction
    main.o(.text.main) refers to main.o(.bss.xObsatcleDetectionHandle) for xObsatcleDetectionHandle
    main.o(.text.main) refers to main.o(.text.vObstacleDetection) for vObstacleDetection
    main.o(.text.main) refers to ports_init.o(.text.PortD_Config) for PortD_Config
    main.o(.text.main) refers to main.o(.bss.xEncoderTaskHandle) for xEncoderTaskHandle
    main.o(.text.main) refers to main.o(.text.vEncoderTask) for vEncoderTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.ISRHandlers) refers to gpio.o(i.GPIOIntStatus) for GPIOIntStatus
    main.o(.text.ISRHandlers) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.text.ISRHandlers) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.ISRHandlers) refers to main.o(.bss.lock_state) for lock_state
    main.o(.text.ISRHandlers) refers to main.o(.bss.last_task) for last_task
    main.o(.text.ISRHandlers) refers to main.o(.bss.xPassengerWindowElevateTaskUnlockerSemaphore) for xPassengerWindowElevateTaskUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.ISRHandlers) refers to main.o(.bss.xPassengerWindowLowerTaskUnlockerSemaphore) for xPassengerWindowLowerTaskUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to main.o(.bss.xDriverWindowElevateTaskUnlockerSemaphore) for xDriverWindowElevateTaskUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to main.o(.bss.xDriverWindowLowerTaskUnlockerSemaphore) for xDriverWindowLowerTaskUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to main.o(.bss.xObstacleDetectionUnlockerSemaphore) for xObstacleDetectionUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to main.o(.bss.xLowerLimitUnlockerSemaphore) for xLowerLimitUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to main.o(.bss.xUpperLimitUnlockerSemaphore) for xUpperLimitUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to main.o(.bss.xLockWindowsTaskUnlockerSemaphore) for xLockWindowsTaskUnlockerSemaphore
    main.o(.text.ISRHandlers) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    main.o(.text.ISRHandlers) refers to main.o(.bss.lastEncoderTime) for lastEncoderTime
    main.o(.text.ISRHandlers) refers to main.o(.data.encoderPos) for encoderPos
    main.o(.text.ISRHandlers) refers to main.o(.bss.encoderDirection) for encoderDirection
    main.o(.text.ISRHandlers) refers to main.o(.bss.xEncoderTaskHandle) for xEncoderTaskHandle
    main.o(.text.ISRHandlers) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    main.o(.ARM.exidx.text.ISRHandlers) refers to main.o(.text.ISRHandlers) for [Anonymous Symbol]
    main.o(.text.vPassengerWindowElevateTask) refers to main.o(.bss.xPassengerWindowElevateTaskUnlockerSemaphore) for xPassengerWindowElevateTaskUnlockerSemaphore
    main.o(.text.vPassengerWindowElevateTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vPassengerWindowElevateTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vPassengerWindowElevateTask) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vPassengerWindowElevateTask) refers to main.o(.bss.passenger_elevate_button_state) for passenger_elevate_button_state
    main.o(.text.vPassengerWindowElevateTask) refers to main.o(.data.window_state) for window_state
    main.o(.text.vPassengerWindowElevateTask) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vPassengerWindowElevateTask) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vPassengerWindowElevateTask) refers to main.o(.rodata.str1.1) for .L.str.25
    main.o(.text.vPassengerWindowElevateTask) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vPassengerWindowElevateTask) refers to main.o(.bss.last_task) for last_task
    main.o(.text.vPassengerWindowElevateTask) refers to main.o(.bss.operation) for operation
    main.o(.ARM.exidx.text.vPassengerWindowElevateTask) refers to main.o(.text.vPassengerWindowElevateTask) for [Anonymous Symbol]
    main.o(.text.vPassengerWindowLowerTask) refers to main.o(.bss.xPassengerWindowLowerTaskUnlockerSemaphore) for xPassengerWindowLowerTaskUnlockerSemaphore
    main.o(.text.vPassengerWindowLowerTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vPassengerWindowLowerTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vPassengerWindowLowerTask) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vPassengerWindowLowerTask) refers to main.o(.bss.passenger_lower_button_state) for passenger_lower_button_state
    main.o(.text.vPassengerWindowLowerTask) refers to main.o(.data.window_state) for window_state
    main.o(.text.vPassengerWindowLowerTask) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vPassengerWindowLowerTask) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vPassengerWindowLowerTask) refers to main.o(.rodata.str1.1) for .L.str.25
    main.o(.text.vPassengerWindowLowerTask) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vPassengerWindowLowerTask) refers to main.o(.bss.operation) for operation
    main.o(.text.vPassengerWindowLowerTask) refers to main.o(.bss.last_task) for last_task
    main.o(.ARM.exidx.text.vPassengerWindowLowerTask) refers to main.o(.text.vPassengerWindowLowerTask) for [Anonymous Symbol]
    main.o(.text.vDriverWindowElevateTask) refers to main.o(.bss.xDriverWindowElevateTaskUnlockerSemaphore) for xDriverWindowElevateTaskUnlockerSemaphore
    main.o(.text.vDriverWindowElevateTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vDriverWindowElevateTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vDriverWindowElevateTask) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vDriverWindowElevateTask) refers to main.o(.bss.driver_elevate_button_state) for driver_elevate_button_state
    main.o(.text.vDriverWindowElevateTask) refers to main.o(.data.window_state) for window_state
    main.o(.text.vDriverWindowElevateTask) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vDriverWindowElevateTask) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vDriverWindowElevateTask) refers to main.o(.rodata.str1.1) for .L.str.18
    main.o(.text.vDriverWindowElevateTask) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vDriverWindowElevateTask) refers to main.o(.bss.operation) for operation
    main.o(.text.vDriverWindowElevateTask) refers to main.o(.bss.last_task) for last_task
    main.o(.ARM.exidx.text.vDriverWindowElevateTask) refers to main.o(.text.vDriverWindowElevateTask) for [Anonymous Symbol]
    main.o(.text.vDriverWindowLowerTask) refers to main.o(.bss.xDriverWindowLowerTaskUnlockerSemaphore) for xDriverWindowLowerTaskUnlockerSemaphore
    main.o(.text.vDriverWindowLowerTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vDriverWindowLowerTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vDriverWindowLowerTask) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vDriverWindowLowerTask) refers to main.o(.bss.driver_lower_button_state) for driver_lower_button_state
    main.o(.text.vDriverWindowLowerTask) refers to main.o(.data.window_state) for window_state
    main.o(.text.vDriverWindowLowerTask) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vDriverWindowLowerTask) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vDriverWindowLowerTask) refers to main.o(.rodata.str1.1) for .L.str.18
    main.o(.text.vDriverWindowLowerTask) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vDriverWindowLowerTask) refers to main.o(.bss.operation) for operation
    main.o(.text.vDriverWindowLowerTask) refers to main.o(.bss.last_task) for last_task
    main.o(.ARM.exidx.text.vDriverWindowLowerTask) refers to main.o(.text.vDriverWindowLowerTask) for [Anonymous Symbol]
    main.o(.text.vLockWindows) refers to main.o(.bss.xLockWindowsTaskUnlockerSemaphore) for xLockWindowsTaskUnlockerSemaphore
    main.o(.text.vLockWindows) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vLockWindows) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vLockWindows) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vLockWindows) refers to main.o(.bss.lock_state) for lock_state
    main.o(.text.vLockWindows) refers to main.o(.bss.xPassengerWindowElevateTaskHandle) for xPassengerWindowElevateTaskHandle
    main.o(.text.vLockWindows) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.vLockWindows) refers to main.o(.bss.xPassengerWindowLowerTaskHandle) for xPassengerWindowLowerTaskHandle
    main.o(.text.vLockWindows) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vLockWindows) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vLockWindows) refers to main.o(.rodata.str1.1) for .L.str.27
    main.o(.text.vLockWindows) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vLockWindows) refers to tasks.o(.text.vTaskResume) for vTaskResume
    main.o(.ARM.exidx.text.vLockWindows) refers to main.o(.text.vLockWindows) for [Anonymous Symbol]
    main.o(.text.vUpperLimitAction) refers to main.o(.bss.xUpperLimitUnlockerSemaphore) for xUpperLimitUnlockerSemaphore
    main.o(.text.vUpperLimitAction) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vUpperLimitAction) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vUpperLimitAction) refers to main.o(.bss.upper_limit_switch_state) for upper_limit_switch_state
    main.o(.text.vUpperLimitAction) refers to main.o(.bss.operation) for operation
    main.o(.text.vUpperLimitAction) refers to main.o(.data.window_state) for window_state
    main.o(.text.vUpperLimitAction) refers to main.o(.bss.xDriverWindowElevateTaskHandle) for xDriverWindowElevateTaskHandle
    main.o(.text.vUpperLimitAction) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.vUpperLimitAction) refers to main.o(.bss.xPassengerWindowElevateTaskHandle) for xPassengerWindowElevateTaskHandle
    main.o(.text.vUpperLimitAction) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vUpperLimitAction) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vUpperLimitAction) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.vUpperLimitAction) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vUpperLimitAction) refers to tasks.o(.text.vTaskResume) for vTaskResume
    main.o(.ARM.exidx.text.vUpperLimitAction) refers to main.o(.text.vUpperLimitAction) for [Anonymous Symbol]
    main.o(.text.vLowerLimitAction) refers to main.o(.bss.xLowerLimitUnlockerSemaphore) for xLowerLimitUnlockerSemaphore
    main.o(.text.vLowerLimitAction) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vLowerLimitAction) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vLowerLimitAction) refers to main.o(.bss.lower_limit_switch_state) for lower_limit_switch_state
    main.o(.text.vLowerLimitAction) refers to main.o(.bss.operation) for operation
    main.o(.text.vLowerLimitAction) refers to main.o(.data.window_state) for window_state
    main.o(.text.vLowerLimitAction) refers to main.o(.bss.xDriverWindowLowerTaskHandle) for xDriverWindowLowerTaskHandle
    main.o(.text.vLowerLimitAction) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.vLowerLimitAction) refers to main.o(.bss.xPassengerWindowLowerTaskHandle) for xPassengerWindowLowerTaskHandle
    main.o(.text.vLowerLimitAction) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vLowerLimitAction) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vLowerLimitAction) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.vLowerLimitAction) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vLowerLimitAction) refers to tasks.o(.text.vTaskResume) for vTaskResume
    main.o(.ARM.exidx.text.vLowerLimitAction) refers to main.o(.text.vLowerLimitAction) for [Anonymous Symbol]
    main.o(.text.vObstacleDetection) refers to main.o(.bss.xObstacleDetectionUnlockerSemaphore) for xObstacleDetectionUnlockerSemaphore
    main.o(.text.vObstacleDetection) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.vObstacleDetection) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.vObstacleDetection) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vObstacleDetection) refers to main.o(.bss.ir_sensor_state) for ir_sensor_state
    main.o(.text.vObstacleDetection) refers to main.o(.bss.operation) for operation
    main.o(.text.vObstacleDetection) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vObstacleDetection) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vObstacleDetection) refers to main.o(.rodata.str1.1) for .L.str.30
    main.o(.text.vObstacleDetection) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vObstacleDetection) refers to main.o(.bss.xDriverWindowElevateTaskHandle) for xDriverWindowElevateTaskHandle
    main.o(.text.vObstacleDetection) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.vObstacleDetection) refers to main.o(.bss.xPassengerWindowElevateTaskHandle) for xPassengerWindowElevateTaskHandle
    main.o(.text.vObstacleDetection) refers to tasks.o(.text.vTaskResume) for vTaskResume
    main.o(.ARM.exidx.text.vObstacleDetection) refers to main.o(.text.vObstacleDetection) for [Anonymous Symbol]
    main.o(.text.vApplicationIdleHook) refers to lcd.o(.text.LCD_Clear) for LCD_Clear
    main.o(.text.vApplicationIdleHook) refers to lcd.o(.text.LCD_SetCursor) for LCD_SetCursor
    main.o(.text.vApplicationIdleHook) refers to main.o(.rodata.str1.1) for .L.str.33
    main.o(.text.vApplicationIdleHook) refers to lcd.o(.text.LCD_Print) for LCD_Print
    main.o(.text.vApplicationIdleHook) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.vApplicationIdleHook) refers to main.o(.bss.lock_state) for lock_state
    main.o(.text.vApplicationIdleHook) refers to main.o(.bss.xPassengerWindowElevateTaskHandle) for xPassengerWindowElevateTaskHandle
    main.o(.text.vApplicationIdleHook) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.vApplicationIdleHook) refers to main.o(.bss.xPassengerWindowLowerTaskHandle) for xPassengerWindowLowerTaskHandle
    main.o(.text.vApplicationIdleHook) refers to sysctl.o(i.SysCtlSleep) for SysCtlSleep
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    retarget.o(.text.__write) refers to retarget.o(.text.ITM_SendChar) for ITM_SendChar
    retarget.o(.ARM.exidx.text.__write) refers to retarget.o(.text.__write) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text.ITM_SendChar) refers to retarget.o(.text.ITM_SendChar) for [Anonymous Symbol]
    retarget.o(.ARM.exidx.text._sys_exit) refers to retarget.o(.text._sys_exit) for [Anonymous Symbol]
    ports_init.o(.ARM.exidx.text.PortA_Config) refers to ports_init.o(.text.PortA_Config) for [Anonymous Symbol]
    ports_init.o(.ARM.exidx.text.PortC_Config) refers to ports_init.o(.text.PortC_Config) for [Anonymous Symbol]
    ports_init.o(.ARM.exidx.text.PortF_Config) refers to ports_init.o(.text.PortF_Config) for [Anonymous Symbol]
    ports_init.o(.ARM.exidx.text.PortD_Config) refers to ports_init.o(.text.PortD_Config) for [Anonymous Symbol]
    lcd.o(.text.LCD_Init) refers to lcd.o(.data.lcd_backlight) for lcd_backlight
    lcd.o(.text.LCD_Init) refers to lcd.o(.text.I2C0_Init) for I2C0_Init
    lcd.o(.text.LCD_Init) refers to lcd.o(.text.LCD_WriteNibble) for LCD_WriteNibble
    lcd.o(.text.LCD_Init) refers to lcd.o(.text.LCD_Cmd) for LCD_Cmd
    lcd.o(.ARM.exidx.text.LCD_Init) refers to lcd.o(.text.LCD_Init) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.I2C0_Init) refers to lcd.o(.text.I2C0_Init) for [Anonymous Symbol]
    lcd.o(.text.LCD_WriteNibble) refers to lcd.o(.text.LCD_Write4Bits) for LCD_Write4Bits
    lcd.o(.ARM.exidx.text.LCD_WriteNibble) refers to lcd.o(.text.LCD_WriteNibble) for [Anonymous Symbol]
    lcd.o(.text.LCD_Cmd) refers to lcd.o(.text.LCD_WriteNibble) for LCD_WriteNibble
    lcd.o(.ARM.exidx.text.LCD_Cmd) refers to lcd.o(.text.LCD_Cmd) for [Anonymous Symbol]
    lcd.o(.text.LCD_Clear) refers to lcd.o(.text.LCD_Cmd) for LCD_Cmd
    lcd.o(.ARM.exidx.text.LCD_Clear) refers to lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    lcd.o(.text.LCD_SetCursor) refers to lcd.o(.text.LCD_Cmd) for LCD_Cmd
    lcd.o(.ARM.exidx.text.LCD_SetCursor) refers to lcd.o(.text.LCD_SetCursor) for [Anonymous Symbol]
    lcd.o(.text.LCD_Print) refers to lcd.o(.text.LCD_Data) for LCD_Data
    lcd.o(.ARM.exidx.text.LCD_Print) refers to lcd.o(.text.LCD_Print) for [Anonymous Symbol]
    lcd.o(.text.LCD_Data) refers to lcd.o(.text.LCD_WriteNibble) for LCD_WriteNibble
    lcd.o(.ARM.exidx.text.LCD_Data) refers to lcd.o(.text.LCD_Data) for [Anonymous Symbol]
    lcd.o(.text.LCD_PrintNum) refers to lcd.o(.rodata.str1.1) for .L.str
    lcd.o(.text.LCD_PrintNum) refers to printfa.o(i.__0sprintf) for sprintf
    lcd.o(.text.LCD_PrintNum) refers to lcd.o(.text.LCD_Print) for LCD_Print
    lcd.o(.ARM.exidx.text.LCD_PrintNum) refers to lcd.o(.text.LCD_PrintNum) for [Anonymous Symbol]
    lcd.o(.text.LCD_SetBacklight) refers to lcd.o(.data.lcd_backlight) for lcd_backlight
    lcd.o(.ARM.exidx.text.LCD_SetBacklight) refers to lcd.o(.text.LCD_SetBacklight) for [Anonymous Symbol]
    lcd.o(.text.LCD_Write4Bits) refers to lcd.o(.data.lcd_backlight) for lcd_backlight
    lcd.o(.text.LCD_Write4Bits) refers to lcd.o(.text.I2C0_WriteByte) for I2C0_WriteByte
    lcd.o(.text.LCD_Write4Bits) refers to lcd.o(.text.LCD_PulseEnable) for LCD_PulseEnable
    lcd.o(.ARM.exidx.text.LCD_Write4Bits) refers to lcd.o(.text.LCD_Write4Bits) for [Anonymous Symbol]
    lcd.o(.ARM.exidx.text.I2C0_WriteByte) refers to lcd.o(.text.I2C0_WriteByte) for [Anonymous Symbol]
    lcd.o(.text.LCD_PulseEnable) refers to lcd.o(.data.lcd_backlight) for lcd_backlight
    lcd.o(.text.LCD_PulseEnable) refers to lcd.o(.text.I2C0_WriteByte) for I2C0_WriteByte
    lcd.o(.ARM.exidx.text.LCD_PulseEnable) refers to lcd.o(.text.LCD_PulseEnable) for [Anonymous Symbol]
    clib_os.o(.ARM.exidx.text.software_init_hook) refers to clib_os.o(.text.software_init_hook) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.1) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.xTaskAbortDelay) for xTaskAbortDelay
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommandFromTask) for xTimerGenericCommandFromTask
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCapacity) refers to queue.o(.text.uxQueueGetQueueLength) for uxQueueGetQueueLength
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetMsgSize) refers to queue.o(.text.uxQueueGetQueueItemSize) for uxQueueGetQueueItemSize
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueGetQueueLength) for uxQueueGetQueueLength
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationIdleHook) refers to cmsis_os2.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.ITM_SendChar) refers to retarget_io.o(.text.ITM_SendChar) for [Anonymous Symbol]
    retarget_io.o(.text.ITM_ReceiveChar) refers to retarget_io.o(.data.ITM_RxBuffer) for ITM_RxBuffer
    retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar) refers to retarget_io.o(.text.ITM_ReceiveChar) for [Anonymous Symbol]
    retarget_io.o(.text.fputc) refers to stdout.o(.data) for __stdout
    retarget_io.o(.text.fputc) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text.fputc) refers to retarget_io.o(.text.fputc) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.text.ITM_SendChar) for ITM_SendChar
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.text.fgetc) refers to stdin.o(.data) for __stdin
    retarget_io.o(.text.fgetc) refers to retarget_io.o(.bss.getchar_undo) for getchar_undo
    retarget_io.o(.text.fgetc) refers to retarget_io.o(.data.getchar_ch) for getchar_ch
    retarget_io.o(.text.fgetc) refers to retarget_io.o(.text.stdin_getchar) for stdin_getchar
    retarget_io.o(.ARM.exidx.text.fgetc) refers to retarget_io.o(.text.fgetc) for [Anonymous Symbol]
    retarget_io.o(.text.stdin_getchar) refers to retarget_io.o(.text.ITM_ReceiveChar) for ITM_ReceiveChar
    retarget_io.o(.ARM.exidx.text.stdin_getchar) refers to retarget_io.o(.text.stdin_getchar) for [Anonymous Symbol]
    retarget_io.o(.text.__backspace) refers to stdin.o(.data) for __stdin
    retarget_io.o(.text.__backspace) refers to retarget_io.o(.data.getchar_ch) for getchar_ch
    retarget_io.o(.text.__backspace) refers to retarget_io.o(.bss.getchar_undo) for getchar_undo
    retarget_io.o(.ARM.exidx.text.__backspace) refers to retarget_io.o(.text.__backspace) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget_io.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.text.abort) for abort
    retarget_io.o(.ARM.exidx.text.__aeabi_assert) refers to retarget_io.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.abort) refers to retarget_io.o(.text.abort) for [Anonymous Symbol]
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetStaticBuffer) refers to event_groups.o(.text.xEventGroupGetStaticBuffer) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to memseta.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortHeapResetState) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.ARM.exidx.text.vPortHeapResetState) refers to heap_4.o(.text.vPortHeapResetState) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGenericGetStaticBuffers) refers to queue.o(.text.xQueueGenericGetStaticBuffers) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize) refers to queue.o(.text.uxQueueGetQueueItemSize) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueLength) refers to queue.o(.text.uxQueueGetQueueLength) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvCreateStaticTask) for prvCreateStaticTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvCreateStaticTask) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.prvCreateStaticTask) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.ARM.exidx.text.prvCreateStaticTask) refers to tasks.o(.text.prvCreateStaticTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvCreateTask) for prvCreateTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvCreateTask) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.prvCreateTask) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.prvCreateTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvCreateTask) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.ARM.exidx.text.prvCreateTask) refers to tasks.o(.text.prvCreateTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskBasePriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskBasePriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet) refers to tasks.o(.text.uxTaskBasePriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR) refers to tasks.o(.text.uxTaskBasePriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvCreateIdleTasks) for prvCreateIdleTasks
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.prvCreateIdleTasks) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.ARM.exidx.text.prvCreateIdleTasks) refers to tasks.o(.text.prvCreateIdleTasks) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for xTimerGetTimerDaemonTaskHandle
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xIdleTaskHandles) for xIdleTaskHandles
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetStaticBuffers) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetStaticBuffers) refers to tasks.o(.text.xTaskGetStaticBuffers) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.xTaskAbortDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskAbortDelay) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskAbortDelay) refers to tasks.o(.text.xTaskAbortDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore) refers to tasks.o(.text.xTaskGetCurrentTaskHandleForCore) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB) for vApplicationGetIdleTaskMemory.xIdleTaskTCB
    tasks.o(.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack) for vApplicationGetIdleTaskMemory.uxIdleTaskStack
    tasks.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to tasks.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    tasks.o(.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB) for vApplicationGetTimerTaskMemory.xTimerTaskTCB
    tasks.o(.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack) for vApplicationGetTimerTaskMemory.uxTimerTaskStack
    tasks.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to tasks.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xYieldPendings) for xYieldPendings
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskResetState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskResetState) refers to tasks.o(.text.vTaskResetState) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to main.o(.text.vApplicationIdleHook) for vApplicationIdleHook
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromTask) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommandFromTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask) refers to timers.o(.text.xTimerGenericCommandFromTask) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommandFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommandFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR) refers to timers.o(.text.xTimerGenericCommandFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetStaticBuffer) refers to timers.o(.text.xTimerGetStaticBuffer) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.vTimerResetState) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.vTimerResetState) refers to timers.o(.text.vTimerResetState) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing basic_io.o(.text), (0 bytes).
    Removing basic_io.o(.text.vPrintString), (48 bytes).
    Removing basic_io.o(.ARM.exidx.text.vPrintString), (8 bytes).
    Removing basic_io.o(.text.vPrintStringAndNumber), (52 bytes).
    Removing basic_io.o(.ARM.exidx.text.vPrintStringAndNumber), (8 bytes).
    Removing basic_io.o(.text.vPrintStringAndNumbers), (60 bytes).
    Removing basic_io.o(.ARM.exidx.text.vPrintStringAndNumbers), (8 bytes).
    Removing basic_io.o(.bss.cBuffer), (50 bytes).
    Removing basic_io.o(.rodata.str1.1), (23 bytes).
    Removing consoleprint.o(.text), (0 bytes).
    Removing consoleprint.o(.text.consoleprint), (32 bytes).
    Removing consoleprint.o(.ARM.exidx.text.consoleprint), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.vEncoderTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.ISRHandlers), (8 bytes).
    Removing main.o(.ARM.exidx.text.vPassengerWindowElevateTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vPassengerWindowLowerTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vDriverWindowElevateTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vDriverWindowLowerTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.vLockWindows), (8 bytes).
    Removing main.o(.ARM.exidx.text.vUpperLimitAction), (8 bytes).
    Removing main.o(.ARM.exidx.text.vLowerLimitAction), (8 bytes).
    Removing main.o(.ARM.exidx.text.vObstacleDetection), (8 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing retarget.o(.text), (0 bytes).
    Removing retarget.o(.text.__write), (52 bytes).
    Removing retarget.o(.ARM.exidx.text.__write), (8 bytes).
    Removing retarget.o(.text.ITM_SendChar), (68 bytes).
    Removing retarget.o(.ARM.exidx.text.ITM_SendChar), (8 bytes).
    Removing retarget.o(.text._sys_exit), (10 bytes).
    Removing retarget.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing ports_init.o(.text), (0 bytes).
    Removing ports_init.o(.ARM.exidx.text.PortA_Config), (8 bytes).
    Removing ports_init.o(.ARM.exidx.text.PortC_Config), (8 bytes).
    Removing ports_init.o(.ARM.exidx.text.PortF_Config), (8 bytes).
    Removing ports_init.o(.ARM.exidx.text.PortD_Config), (8 bytes).
    Removing lcd.o(.text), (0 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.I2C0_Init), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_WriteNibble), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Cmd), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetCursor), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Print), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Data), (8 bytes).
    Removing lcd.o(.text.LCD_PrintNum), (34 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_PrintNum), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_SetBacklight), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_Write4Bits), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.I2C0_WriteByte), (8 bytes).
    Removing lcd.o(.ARM.exidx.text.LCD_PulseEnable), (8 bytes).
    Removing lcd.o(.rodata..L__const.LCD_SetCursor.row_offsets), (2 bytes).
    Removing lcd.o(.rodata.str1.1), (4 bytes).
    Removing clib_os.o(.text), (0 bytes).
    Removing clib_os.o(.text.software_init_hook), (2 bytes).
    Removing clib_os.o(.ARM.exidx.text.software_init_hook), (8 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (126 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (348 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (110 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (184 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (354 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (376 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (130 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (234 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (254 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (268 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (168 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (138 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (214 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (198 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (194 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (110 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (436 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (250 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (308 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.text.vApplicationIdleHook), (2 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.1), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (126 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (60 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.os), (1 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.text.ITM_SendChar), (66 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_SendChar), (8 bytes).
    Removing retarget_io.o(.text.ITM_ReceiveChar), (62 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar), (8 bytes).
    Removing retarget_io.o(.text.fputc), (48 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget_io.o(.text.stdout_putchar), (16 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text.fgetc), (110 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget_io.o(.text.stdin_getchar), (30 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdin_getchar), (8 bytes).
    Removing retarget_io.o(.text.__backspace), (76 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing retarget_io.o(.text.__aeabi_assert), (188 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget_io.o(.text.abort), (4 bytes).
    Removing retarget_io.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget_io.o(.data.ITM_RxBuffer), (4 bytes).
    Removing retarget_io.o(.bss.getchar_undo), (4 bytes).
    Removing retarget_io.o(.data.getchar_ch), (4 bytes).
    Removing retarget_io.o(.rodata.str1.1), (39 bytes).
    Removing startup_tm4c123.o(HEAP), (0 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (50 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetStaticBuffer), (44 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetStaticBuffer), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing heap_4.o(.text.vPortHeapResetState), (54 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortHeapResetState), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericGetStaticBuffers), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericGetStaticBuffers), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutexStatic), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (32 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (362 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (76 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (204 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (214 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (204 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (34 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueItemSize), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueItemSize), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueLength), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueLength), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateStaticTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateTask), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (276 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (276 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskBasePriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskBasePriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (472 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (296 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCreateIdleTasks), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskGetStaticBuffers), (116 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetStaticBuffers), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (282 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.text.xTaskAbortDelay), (266 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskAbortDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (104 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (324 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (308 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandleForCore), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandleForCore), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (242 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (300 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (464 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (438 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing tasks.o(.text.vTaskResetState), (160 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResetState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromTask), (124 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromTask), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommandFromISR), (88 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommandFromISR), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (20 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.xTimerGetStaticBuffer), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetStaticBuffer), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerResetState), (24 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerResetState), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIODirModeSet), (40 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPadConfigSet), (368 bytes).
    Removing gpio.o(i.GPIOPinConfigure), (68 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOInput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUART), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing gpio.o(i.GPIOPinWrite), (6 bytes).
    Removing gpio.o(i.GPIOUnlockPin), (24 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReady), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).

682 unused section(s) (total 29562 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdin.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    basic_io.c                               0x00000000   Number         0  basic_io.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clib_os.c                                0x00000000   Number         0  clib_os.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    consoleprint.c                           0x00000000   Number         0  consoleprint.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    lcd.c                                    0x00000000   Number         0  lcd.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    ports_init.c                             0x00000000   Number         0  ports_init.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    .ARM.Collect$$$$00000000                 0x0000026c   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x0000026c   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000270   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000274   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000274   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000274   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x0000027c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x0000027c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000027c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000027c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000280   Number         0  cpu.o(.emb_text)
    .emb_text                                0x00000280   Section       38  cpu.o(.emb_text)
    $v0                                      0x000002a8   Number         0  startup_tm4c123.o(.text)
    .text                                    0x000002a8   Section      252  startup_tm4c123.o(.text)
    .text                                    0x000003a4   Section        0  memcpya.o(.text)
    .text                                    0x000003c8   Section        0  memseta.o(.text)
    .text                                    0x000003ec   Section        0  uidiv.o(.text)
    .text                                    0x00000418   Section        0  uldiv.o(.text)
    .text                                    0x0000047a   Section        0  iusefp.o(.text)
    .text                                    0x0000047a   Section        0  dadd.o(.text)
    .text                                    0x000005c8   Section        0  dmul.o(.text)
    .text                                    0x000006ac   Section        0  ddiv.o(.text)
    .text                                    0x0000078a   Section        0  dfixul.o(.text)
    .text                                    0x000007bc   Section       48  cdrcmple.o(.text)
    .text                                    0x000007ec   Section       36  init.o(.text)
    .text                                    0x00000810   Section        0  llshl.o(.text)
    .text                                    0x0000082e   Section        0  llushr.o(.text)
    .text                                    0x0000084e   Section        0  llsshr.o(.text)
    .text                                    0x00000872   Section        0  depilogue.o(.text)
    .text                                    0x0000092c   Section        0  __dczerorl.o(.text)
    I2C0_Init                                0x00000969   Thumb Code   140  lcd.o(.text.I2C0_Init)
    [Anonymous Symbol]                       0x00000968   Section        0  lcd.o(.text.I2C0_Init)
    I2C0_WriteByte                           0x000009f5   Thumb Code    68  lcd.o(.text.I2C0_WriteByte)
    [Anonymous Symbol]                       0x000009f4   Section        0  lcd.o(.text.I2C0_WriteByte)
    [Anonymous Symbol]                       0x00000a38   Section        0  main.o(.text.ISRHandlers)
    [Anonymous Symbol]                       0x00001158   Section        0  lcd.o(.text.LCD_Clear)
    LCD_Cmd                                  0x00001181   Thumb Code    42  lcd.o(.text.LCD_Cmd)
    [Anonymous Symbol]                       0x00001180   Section        0  lcd.o(.text.LCD_Cmd)
    LCD_Data                                 0x000011ad   Thumb Code    42  lcd.o(.text.LCD_Data)
    [Anonymous Symbol]                       0x000011ac   Section        0  lcd.o(.text.LCD_Data)
    [Anonymous Symbol]                       0x000011d8   Section        0  lcd.o(.text.LCD_Init)
    [Anonymous Symbol]                       0x000012bc   Section        0  lcd.o(.text.LCD_Print)
    LCD_PulseEnable                          0x000012e1   Thumb Code    62  lcd.o(.text.LCD_PulseEnable)
    [Anonymous Symbol]                       0x000012e0   Section        0  lcd.o(.text.LCD_PulseEnable)
    [Anonymous Symbol]                       0x00001320   Section        0  lcd.o(.text.LCD_SetBacklight)
    [Anonymous Symbol]                       0x00001340   Section        0  lcd.o(.text.LCD_SetCursor)
    LCD_Write4Bits                           0x00001371   Thumb Code    42  lcd.o(.text.LCD_Write4Bits)
    [Anonymous Symbol]                       0x00001370   Section        0  lcd.o(.text.LCD_Write4Bits)
    LCD_WriteNibble                          0x0000139d   Thumb Code    44  lcd.o(.text.LCD_WriteNibble)
    [Anonymous Symbol]                       0x0000139c   Section        0  lcd.o(.text.LCD_WriteNibble)
    [Anonymous Symbol]                       0x000013d0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00001430   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00001434   Section        0  ports_init.o(.text.PortA_Config)
    [Anonymous Symbol]                       0x00001470   Section        0  ports_init.o(.text.PortC_Config)
    [Anonymous Symbol]                       0x000014a4   Section        0  ports_init.o(.text.PortD_Config)
    [Anonymous Symbol]                       0x00001514   Section        0  ports_init.o(.text.PortF_Config)
    [Anonymous Symbol]                       0x00001590   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x000015b0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000015b4   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000015d4   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000016e0   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00001ac1   Thumb Code   270  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00001ac0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001bd1   Thumb Code   368  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001bd0   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001d41   Thumb Code   126  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001d40   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001dc1   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001dc0   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001e1d   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001e1c   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCreateIdleTasks                       0x00001e61   Thumb Code   200  tasks.o(.text.prvCreateIdleTasks)
    [Anonymous Symbol]                       0x00001e60   Section        0  tasks.o(.text.prvCreateIdleTasks)
    prvCreateStaticTask                      0x00001f29   Thumb Code   120  tasks.o(.text.prvCreateStaticTask)
    [Anonymous Symbol]                       0x00001f28   Section        0  tasks.o(.text.prvCreateStaticTask)
    prvCreateTask                            0x00001fa1   Thumb Code   142  tasks.o(.text.prvCreateTask)
    [Anonymous Symbol]                       0x00001fa0   Section        0  tasks.o(.text.prvCreateTask)
    prvDeleteTCB                             0x00002031   Thumb Code    60  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x00002030   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x0000206d   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x0000206c   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x00002095   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00002094   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x000020d5   Thumb Code   170  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x000020d4   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x00002181   Thumb Code    60  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00002180   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewQueue                    0x000021bd   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000021bc   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00002205   Thumb Code   230  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00002204   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x000022ed   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x000022ec   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x0000237d   Thumb Code   216  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x0000237c   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x00002455   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x00002454   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x000024dd   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x000024dc   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvPortStartFirstTask                    0x00002505   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00002504   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x0000252d   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x0000252c   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00002581   Thumb Code   334  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00002580   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x000026d1   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x000026d0   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x0000276d   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x0000276c   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x000027a1   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x000027a0   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x000027dd   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x000027dc   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00002821   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00002820   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00002875   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00002874   Section        0  port.o(.text.prvTaskExitError)
    prvTaskIsTaskSuspended                   0x0000289d   Thumb Code   124  tasks.o(.text.prvTaskIsTaskSuspended)
    [Anonymous Symbol]                       0x0000289c   Section        0  tasks.o(.text.prvTaskIsTaskSuspended)
    prvTimerTask                             0x00002919   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00002918   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00002939   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002938   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x000029e8   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00002ba0   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002bc4   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002c24   Section        0  tasks.o(.text.ulTaskGenericNotifyTake)
    [Anonymous Symbol]                       0x00002d30   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00002d78   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x00002d84   Section        0  tasks.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x00002db0   Section        0  tasks.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x00002ddc   Section        0  main.o(.text.vApplicationIdleHook)
    [Anonymous Symbol]                       0x00002e7c   Section        0  main.o(.text.vDriverWindowElevateTask)
    [Anonymous Symbol]                       0x000030b8   Section        0  main.o(.text.vDriverWindowLowerTask)
    [Anonymous Symbol]                       0x000032f4   Section        0  main.o(.text.vEncoderTask)
    [Anonymous Symbol]                       0x00003578   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x000035a8   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x000035b8   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00003624   Section        0  list.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x00003660   Section        0  main.o(.text.vLockWindows)
    [Anonymous Symbol]                       0x000037b8   Section        0  main.o(.text.vLowerLimitAction)
    [Anonymous Symbol]                       0x00003900   Section        0  main.o(.text.vObstacleDetection)
    [Anonymous Symbol]                       0x00003abc   Section        0  main.o(.text.vPassengerWindowElevateTask)
    [Anonymous Symbol]                       0x00003cf4   Section        0  main.o(.text.vPassengerWindowLowerTask)
    vPortEnableVFP                           0x00003f2d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003f2c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00003f40   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00003f70   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00003f98   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00004010   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00004054   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x000040b8   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x00004104   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00004128   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00004138   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00004160   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x000041c4   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x000042fc   Section        0  tasks.o(.text.vTaskResume)
    [Anonymous Symbol]                       0x00004404   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x00004478   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x000045a0   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x000045b0   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000045b0   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x0000466c   Section        0  main.o(.text.vUpperLimitAction)
    [Anonymous Symbol]                       0x000047b4   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00004820   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x00004860   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000048e8   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x00004954   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00004a24   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00004aec   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00004c40   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00004de0   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00004ea4   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00004ef8   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x00004f54   Section        0  tasks.o(.text.xTaskGenericNotifyFromISR)
    [Anonymous Symbol]                       0x00005190   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000051c8   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000051dc   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x0000543c   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00005598   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x0000572c   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x0000596c   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.GPIOIntClear                           0x000059e4   Section        0  gpio.o(i.GPIOIntClear)
    i.GPIOIntEnable                          0x000059ea   Section        0  gpio.o(i.GPIOIntEnable)
    i.GPIOIntRegister                        0x000059f6   Section        0  gpio.o(i.GPIOIntRegister)
    i.GPIOIntStatus                          0x00005a10   Section        0  gpio.o(i.GPIOIntStatus)
    i.GPIOIntTypeSet                         0x00005a1e   Section        0  gpio.o(i.GPIOIntTypeSet)
    i.GPIOPinRead                            0x00005a6e   Section        0  gpio.o(i.GPIOPinRead)
    i.IntEnable                              0x00005a74   Section        0  interrupt.o(i.IntEnable)
    i.IntPrioritySet                         0x00005ad8   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x00005b00   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlSleep                            0x00005b34   Section        0  sysctl.o(i.SysCtlSleep)
    _GPIOIntNumberGet                        0x00005b39   Thumb Code    62  gpio.o(i._GPIOIntNumberGet)
    i._GPIOIntNumberGet                      0x00005b38   Section        0  gpio.o(i._GPIOIntNumberGet)
    i.__0snprintf                            0x00005b88   Section        0  printfa.o(i.__0snprintf)
    i.__scatterload_copy                     0x00005bbc   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00005bca   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00005bcc   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x00005bdd   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x00005bdc   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x00005d61   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x00005d60   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x0000643d   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x0000643c   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x00006461   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00006460   Section        0  printfa.o(i._printf_pre_padding)
    _snputc                                  0x0000648f   Thumb Code    22  printfa.o(i._snputc)
    i._snputc                                0x0000648e   Section        0  printfa.o(i._snputc)
    g_ppui32GPIOIntMapBlizzard               0x000064a4   Data         192  gpio.o(.constdata)
    .constdata                               0x000064a4   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00006564   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x0000663c   Data         144  gpio.o(.constdata)
    g_pui32Priority                          0x000066cc   Data          32  interrupt.o(.constdata)
    .constdata                               0x000066cc   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x000066ec   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x00006788   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x0000679c   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x000067b0   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x000067c4   Data          20  interrupt.o(.constdata)
    .L.str.30                                0x000067d8   Data          19  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000067d8   Section        0  main.o(.rodata.str1.1)
    .L.str.34                                0x000067eb   Data          17  main.o(.rodata.str1.1)
    .L.str.6                                 0x000067fc   Data          16  main.o(.rodata.str1.1)
    .L.str.31                                0x0000680c   Data          20  main.o(.rodata.str1.1)
    .L.str                                   0x00006820   Data           9  main.o(.rodata.str1.1)
    .L.str.28                                0x00006829   Data          15  main.o(.rodata.str1.1)
    .L.str.29                                0x00006838   Data          17  main.o(.rodata.str1.1)
    .L.str.4                                 0x00006849   Data          15  main.o(.rodata.str1.1)
    .L.str.3                                 0x00006858   Data          13  main.o(.rodata.str1.1)
    .L.str.32                                0x00006865   Data          17  main.o(.rodata.str1.1)
    .L.str.1                                 0x00006876   Data          18  main.o(.rodata.str1.1)
    .L.str.33                                0x00006888   Data          14  main.o(.rodata.str1.1)
    .L.str.20                                0x00006896   Data          15  main.o(.rodata.str1.1)
    .L.str.24                                0x000068a5   Data          17  main.o(.rodata.str1.1)
    .L.str.21                                0x000068b6   Data          15  main.o(.rodata.str1.1)
    .L.str.7                                 0x000068c5   Data          23  main.o(.rodata.str1.1)
    .L.str.9                                 0x000068dc   Data          20  main.o(.rodata.str1.1)
    .L.str.25                                0x000068f0   Data          17  main.o(.rodata.str1.1)
    .L.str.18                                0x00006901   Data          14  main.o(.rodata.str1.1)
    .L.str.27                                0x0000690f   Data          15  main.o(.rodata.str1.1)
    .L.str.17                                0x0000691e   Data          15  main.o(.rodata.str1.1)
    .L.str.12                                0x0000692d   Data          17  main.o(.rodata.str1.1)
    .L.str.13                                0x0000693e   Data          17  main.o(.rodata.str1.1)
    .L.str.14                                0x0000694f   Data          18  main.o(.rodata.str1.1)
    .L.str.2                                 0x00006961   Data          16  main.o(.rodata.str1.1)
    .L.str.23                                0x00006971   Data          19  main.o(.rodata.str1.1)
    .L.str.26                                0x00006984   Data          15  main.o(.rodata.str1.1)
    .L.str.22                                0x00006993   Data          12  main.o(.rodata.str1.1)
    .L.str.19                                0x0000699f   Data          17  main.o(.rodata.str1.1)
    .L.str.15                                0x000069b0   Data           8  main.o(.rodata.str1.1)
    .L.str.8                                 0x000069b8   Data          21  main.o(.rodata.str1.1)
    .L.str.10                                0x000069cd   Data          18  main.o(.rodata.str1.1)
    .L.str.16                                0x000069df   Data          16  main.o(.rodata.str1.1)
    .L.str.11                                0x000069ef   Data          12  main.o(.rodata.str1.1)
    .L.str.5                                 0x000069fb   Data          17  main.o(.rodata.str1.1)
    .L.str                                   0x00006a0c   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006a0c   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00006a11   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006a11   Section        0  timers.o(.rodata.str1.1)
    uxTopUsedPriority                        0x00006a1c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    [Anonymous Symbol]                       0x00006a1c   Section        0  tasks.o(.rodata.uxTopUsedPriority)
    encoderPos                               0x20000004   Data           4  main.o(.data.encoderPos)
    [Anonymous Symbol]                       0x20000004   Section        0  main.o(.data.encoderPos)
    uxCriticalNesting                        0x2000000c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000000c   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    encoderDirection                         0x20000674   Data           4  main.o(.bss.encoderDirection)
    [Anonymous Symbol]                       0x20000674   Section        0  main.o(.bss.encoderDirection)
    lastEncoderTime                          0x2000067c   Data           4  main.o(.bss.lastEncoderTime)
    [Anonymous Symbol]                       0x2000067c   Section        0  main.o(.bss.lastEncoderTime)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x20000689   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x20000689   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x200006dc   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x200006dc   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x2000072c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000072c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000730   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000734   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000734   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000738   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000738   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x2000073c   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x2000073c   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000740   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000740   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000744   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000744   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000748   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000748   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000ba8   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000ba8   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002bac   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002bac   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002bb0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002bb0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002bb4   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002bb4   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002bb8   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002bb8   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002bbc   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002bbc   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.uxIdleTaskStack 0x20002bc0   Data         512  tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack)
    [Anonymous Symbol]                       0x20002bc0   Section        0  tasks.o(.bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack)
    vApplicationGetIdleTaskMemory.xIdleTaskTCB 0x20002dc0   Data          92  tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB)
    [Anonymous Symbol]                       0x20002dc0   Section        0  tasks.o(.bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB)
    vApplicationGetTimerTaskMemory.uxTimerTaskStack 0x20002e1c   Data         320  tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack)
    [Anonymous Symbol]                       0x20002e1c   Section        0  tasks.o(.bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack)
    vApplicationGetTimerTaskMemory.xTimerTaskTCB 0x20002f5c   Data          92  tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB)
    [Anonymous Symbol]                       0x20002f5c   Section        0  tasks.o(.bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB)
    xActiveTimerList1                        0x20002fb8   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002fb8   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002fcc   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002fcc   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002fe0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002fe0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002ff4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002ff4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x2000301c   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x2000301c   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandles                         0x20003020   Data           4  tasks.o(.bss.xIdleTaskHandles)
    [Anonymous Symbol]                       0x20003020   Section        0  tasks.o(.bss.xIdleTaskHandles)
    xMinimumEverFreeBytesRemaining           0x20003034   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20003034   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20003038   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20003038   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x2000303c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x2000303c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20003040   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20003040   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20003044   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20003044   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20003060   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20003060   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20003064   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20003064   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20003078   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20003078   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x2000307c   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x2000307c   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20003084   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20003084   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20003098   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20003098   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200030ac   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200030ac   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x200030b0   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x200030b0   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x200030b4   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x200030b4   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPendings                           0x200030c0   Data           4  tasks.o(.bss.xYieldPendings)
    [Anonymous Symbol]                       0x200030c0   Section        0  tasks.o(.bss.xYieldPendings)
    STACK                                    0x200030c8   Section      512  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x0000026d   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000271   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000275   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000275   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000275   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000275   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000027d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000027d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    CPUcpsid                                 0x00000281   Thumb Code     8  cpu.o(.emb_text)
    CPUprimask                               0x00000289   Thumb Code     6  cpu.o(.emb_text)
    CPUcpsie                                 0x0000028f   Thumb Code     8  cpu.o(.emb_text)
    CPUwfi                                   0x00000297   Thumb Code     4  cpu.o(.emb_text)
    CPUbasepriSet                            0x0000029b   Thumb Code     6  cpu.o(.emb_text)
    CPUbasepriGet                            0x000002a1   Thumb Code     6  cpu.o(.emb_text)
    Reset_Handler                            0x000002a9   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x000002b1   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x000002b3   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x000002b5   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x000002b7   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x000002b9   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x000002bd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x000002c3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x000002c5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x000002c7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x000002c9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x000002cb   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x000002cd   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x000002cf   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x000002d1   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x000002d3   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000002d5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000002d7   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000002d9   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000002db   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000002dd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000002df   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000002e1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000002e3   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000002e5   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000002e7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000002e9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000002eb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000002ed   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000002ef   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000002f1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000002f3   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000002f5   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000002f7   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x00000303   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x00000307   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x00000309   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x0000030b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x0000030f   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x00000311   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x00000313   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x000003a5   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000003a5   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000003a5   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000003c9   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000003c9   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000003c9   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000003d7   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000003d7   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000003d7   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000003db   Thumb Code    18  memseta.o(.text)
    __aeabi_uidiv                            0x000003ed   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x000003ed   Thumb Code    44  uidiv.o(.text)
    __aeabi_uldivmod                         0x00000419   Thumb Code    98  uldiv.o(.text)
    __I$use$fp                               0x0000047b   Thumb Code     0  iusefp.o(.text)
    __aeabi_dadd                             0x0000047b   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x000005bd   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x000005c3   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x000005c9   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x000006ad   Thumb Code   222  ddiv.o(.text)
    __aeabi_d2ulz                            0x0000078b   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x000007bd   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x000007ed   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x000007ed   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x00000811   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000811   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0000082f   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x0000082f   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x0000084f   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x0000084f   Thumb Code     0  llsshr.o(.text)
    _double_round                            0x00000873   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000891   Thumb Code   156  depilogue.o(.text)
    __decompress                             0x0000092d   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x0000092d   Thumb Code    58  __dczerorl.o(.text)
    ISRHandlers                              0x00000a39   Thumb Code  1824  main.o(.text.ISRHandlers)
    LCD_Clear                                0x00001159   Thumb Code    40  lcd.o(.text.LCD_Clear)
    LCD_Init                                 0x000011d9   Thumb Code   226  lcd.o(.text.LCD_Init)
    LCD_Print                                0x000012bd   Thumb Code    34  lcd.o(.text.LCD_Print)
    LCD_SetBacklight                         0x00001321   Thumb Code    32  lcd.o(.text.LCD_SetBacklight)
    LCD_SetCursor                            0x00001341   Thumb Code    48  lcd.o(.text.LCD_SetCursor)
    PendSV_Handler                           0x000013d1   Thumb Code   100  port.o(.text.PendSV_Handler)
    PortA_Config                             0x00001435   Thumb Code    58  ports_init.o(.text.PortA_Config)
    PortC_Config                             0x00001471   Thumb Code    50  ports_init.o(.text.PortC_Config)
    PortD_Config                             0x000014a5   Thumb Code   112  ports_init.o(.text.PortD_Config)
    PortF_Config                             0x00001515   Thumb Code   114  ports_init.o(.text.PortF_Config)
    SVC_Handler                              0x00001591   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x000015b5   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x000015d5   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    main                                     0x000016e1   Thumb Code   992  main.o(.text.main)
    pvPortMalloc                             0x000029e9   Thumb Code   438  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00002ba1   Thumb Code    36  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002bc5   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    ulTaskGenericNotifyTake                  0x00002c25   Thumb Code   268  tasks.o(.text.ulTaskGenericNotifyTake)
    uxListRemove                             0x00002d31   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x00002d79   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vApplicationGetIdleTaskMemory            0x00002d85   Thumb Code    42  tasks.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x00002db1   Thumb Code    42  tasks.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationIdleHook                     0x00002ddd   Thumb Code   160  main.o(.text.vApplicationIdleHook)
    vDriverWindowElevateTask                 0x00002e7d   Thumb Code   572  main.o(.text.vDriverWindowElevateTask)
    vDriverWindowLowerTask                   0x000030b9   Thumb Code   570  main.o(.text.vDriverWindowLowerTask)
    vEncoderTask                             0x000032f5   Thumb Code   644  main.o(.text.vEncoderTask)
    vListInitialise                          0x00003579   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x000035a9   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x000035b9   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x00003625   Thumb Code    58  list.o(.text.vListInsertEnd)
    vLockWindows                             0x00003661   Thumb Code   344  main.o(.text.vLockWindows)
    vLowerLimitAction                        0x000037b9   Thumb Code   328  main.o(.text.vLowerLimitAction)
    vObstacleDetection                       0x00003901   Thumb Code   444  main.o(.text.vObstacleDetection)
    vPassengerWindowElevateTask              0x00003abd   Thumb Code   568  main.o(.text.vPassengerWindowElevateTask)
    vPassengerWindowLowerTask                0x00003cf5   Thumb Code   566  main.o(.text.vPassengerWindowLowerTask)
    vPortEnterCritical                       0x00003f41   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00003f71   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x00003f99   Thumb Code   118  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00004011   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x00004055   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x000040b9   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x00004105   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00004129   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00004139   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00004161   Thumb Code   100  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x000041c5   Thumb Code   312  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskResume                              0x000042fd   Thumb Code   264  tasks.o(.text.vTaskResume)
    vTaskStartScheduler                      0x00004405   Thumb Code   114  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspend                             0x00004479   Thumb Code   296  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x000045a1   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x000045b1   Thumb Code   186  tasks.o(.text.vTaskSwitchContext)
    vUpperLimitAction                        0x0000466d   Thumb Code   326  main.o(.text.vUpperLimitAction)
    xPortStartScheduler                      0x000047b5   Thumb Code   108  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x00004821   Thumb Code    62  port.o(.text.xPortSysTickHandler)
    xQueueGenericCreate                      0x00004861   Thumb Code   134  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x000048e9   Thumb Code   108  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x00004955   Thumb Code   208  queue.o(.text.xQueueGenericReset)
    xQueueGiveFromISR                        0x00004a25   Thumb Code   198  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00004aed   Thumb Code   338  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00004c41   Thumb Code   414  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00004de1   Thumb Code   196  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00004ea5   Thumb Code    82  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x00004ef9   Thumb Code    92  tasks.o(.text.xTaskCreateStatic)
    xTaskGenericNotifyFromISR                0x00004f55   Thumb Code   572  tasks.o(.text.xTaskGenericNotifyFromISR)
    xTaskGetSchedulerState                   0x00005191   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000051c9   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000051dd   Thumb Code   606  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityInherit                     0x0000543d   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00005599   Thumb Code   404  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x0000572d   Thumb Code   574  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x0000596d   Thumb Code   120  timers.o(.text.xTimerCreateTimerTask)
    GPIOIntClear                             0x000059e5   Thumb Code     6  gpio.o(i.GPIOIntClear)
    GPIOIntEnable                            0x000059eb   Thumb Code    12  gpio.o(i.GPIOIntEnable)
    GPIOIntRegister                          0x000059f7   Thumb Code    26  gpio.o(i.GPIOIntRegister)
    GPIOIntStatus                            0x00005a11   Thumb Code    14  gpio.o(i.GPIOIntStatus)
    GPIOIntTypeSet                           0x00005a1f   Thumb Code    80  gpio.o(i.GPIOIntTypeSet)
    GPIOPinRead                              0x00005a6f   Thumb Code     6  gpio.o(i.GPIOPinRead)
    IntEnable                                0x00005a75   Thumb Code    92  interrupt.o(i.IntEnable)
    IntPrioritySet                           0x00005ad9   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x00005b01   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlSleep                              0x00005b35   Thumb Code     4  sysctl.o(i.SysCtlSleep)
    __0snprintf                              0x00005b89   Thumb Code    48  printfa.o(i.__0snprintf)
    __1snprintf                              0x00005b89   Thumb Code     0  printfa.o(i.__0snprintf)
    __2snprintf                              0x00005b89   Thumb Code     0  printfa.o(i.__0snprintf)
    __c89snprintf                            0x00005b89   Thumb Code     0  printfa.o(i.__0snprintf)
    snprintf                                 0x00005b89   Thumb Code     0  printfa.o(i.__0snprintf)
    __scatterload_copy                       0x00005bbd   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00005bcb   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00005bcd   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00006a20   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00006a40   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    lcd_backlight                            0x20000008   Data           1  lcd.o(.data.lcd_backlight)
    window_state                             0x20000010   Data           4  main.o(.data.window_state)
    driver_elevate_button_state              0x20000670   Data           1  main.o(.bss.driver_elevate_button_state)
    driver_lower_button_state                0x20000671   Data           1  main.o(.bss.driver_lower_button_state)
    ir_sensor_state                          0x20000678   Data           1  main.o(.bss.ir_sensor_state)
    last_task                                0x20000680   Data           4  main.o(.bss.last_task)
    lock_state                               0x20000684   Data           1  main.o(.bss.lock_state)
    lower_limit_switch_state                 0x20000685   Data           1  main.o(.bss.lower_limit_switch_state)
    operation                                0x20000686   Data           1  main.o(.bss.operation)
    passenger_elevate_button_state           0x20000687   Data           1  main.o(.bss.passenger_elevate_button_state)
    passenger_lower_button_state             0x20000688   Data           1  main.o(.bss.passenger_lower_button_state)
    pxCurrentTCB                             0x20000730   Data           4  tasks.o(.bss.pxCurrentTCB)
    upper_limit_switch_state                 0x20002ba8   Data           1  main.o(.bss.upper_limit_switch_state)
    xDriverWindowElevateTaskHandle           0x20003008   Data           4  main.o(.bss.xDriverWindowElevateTaskHandle)
    xDriverWindowElevateTaskUnlockerSemaphore 0x2000300c   Data           4  main.o(.bss.xDriverWindowElevateTaskUnlockerSemaphore)
    xDriverWindowLowerTaskHandle             0x20003010   Data           4  main.o(.bss.xDriverWindowLowerTaskHandle)
    xDriverWindowLowerTaskUnlockerSemaphore  0x20003014   Data           4  main.o(.bss.xDriverWindowLowerTaskUnlockerSemaphore)
    xEncoderTaskHandle                       0x20003018   Data           4  main.o(.bss.xEncoderTaskHandle)
    xLockWindowsTaskHandle                   0x20003024   Data           4  main.o(.bss.xLockWindowsTaskHandle)
    xLockWindowsTaskUnlockerSemaphore        0x20003028   Data           4  main.o(.bss.xLockWindowsTaskUnlockerSemaphore)
    xLowerLimitActionHandle                  0x2000302c   Data           4  main.o(.bss.xLowerLimitActionHandle)
    xLowerLimitUnlockerSemaphore             0x20003030   Data           4  main.o(.bss.xLowerLimitUnlockerSemaphore)
    xObsatcleDetectionHandle                 0x20003048   Data           4  main.o(.bss.xObsatcleDetectionHandle)
    xObstacleDetectionUnlockerSemaphore      0x2000304c   Data           4  main.o(.bss.xObstacleDetectionUnlockerSemaphore)
    xPassengerWindowElevateTaskHandle        0x20003050   Data           4  main.o(.bss.xPassengerWindowElevateTaskHandle)
    xPassengerWindowElevateTaskUnlockerSemaphore 0x20003054   Data           4  main.o(.bss.xPassengerWindowElevateTaskUnlockerSemaphore)
    xPassengerWindowLowerTaskHandle          0x20003058   Data           4  main.o(.bss.xPassengerWindowLowerTaskHandle)
    xPassengerWindowLowerTaskUnlockerSemaphore 0x2000305c   Data           4  main.o(.bss.xPassengerWindowLowerTaskUnlockerSemaphore)
    xUpperLimitActionHandle                  0x200030b8   Data           4  main.o(.bss.xUpperLimitActionHandle)
    xUpperLimitUnlockerSemaphore             0x200030bc   Data           4  main.o(.bss.xUpperLimitUnlockerSemaphore)
    __initial_sp                             0x200032c8   Data           0  startup_tm4c123.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000002a9

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00007270, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00006c20])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00006a40, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          382    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000000   Code   RO         1686  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000026c   0x0000026c   0x00000004   Code   RO         1732    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000270   0x00000270   0x00000004   Code   RO         1735    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1737    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1739    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000274   0x00000274   0x00000008   Code   RO         1740    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1742    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1744    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x0000027c   0x0000027c   0x00000004   Code   RO         1733    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000280   0x00000280   0x00000026   Code   RO         1676    .emb_text           driverlib.lib(cpu.o)
    0x000002a6   0x000002a6   0x00000002   PAD
    0x000002a8   0x000002a8   0x000000fc   Code   RO          383  * .text               startup_tm4c123.o
    0x000003a4   0x000003a4   0x00000024   Code   RO         1696    .text               mc_w.l(memcpya.o)
    0x000003c8   0x000003c8   0x00000024   Code   RO         1698    .text               mc_w.l(memseta.o)
    0x000003ec   0x000003ec   0x0000002c   Code   RO         1755    .text               mc_w.l(uidiv.o)
    0x00000418   0x00000418   0x00000062   Code   RO         1757    .text               mc_w.l(uldiv.o)
    0x0000047a   0x0000047a   0x00000000   Code   RO         1759    .text               mc_w.l(iusefp.o)
    0x0000047a   0x0000047a   0x0000014e   Code   RO         1760    .text               mf_w.l(dadd.o)
    0x000005c8   0x000005c8   0x000000e4   Code   RO         1762    .text               mf_w.l(dmul.o)
    0x000006ac   0x000006ac   0x000000de   Code   RO         1764    .text               mf_w.l(ddiv.o)
    0x0000078a   0x0000078a   0x00000030   Code   RO         1766    .text               mf_w.l(dfixul.o)
    0x000007ba   0x000007ba   0x00000002   PAD
    0x000007bc   0x000007bc   0x00000030   Code   RO         1768    .text               mf_w.l(cdrcmple.o)
    0x000007ec   0x000007ec   0x00000024   Code   RO         1770    .text               mc_w.l(init.o)
    0x00000810   0x00000810   0x0000001e   Code   RO         1772    .text               mc_w.l(llshl.o)
    0x0000082e   0x0000082e   0x00000020   Code   RO         1774    .text               mc_w.l(llushr.o)
    0x0000084e   0x0000084e   0x00000024   Code   RO         1776    .text               mc_w.l(llsshr.o)
    0x00000872   0x00000872   0x000000ba   Code   RO         1778    .text               mf_w.l(depilogue.o)
    0x0000092c   0x0000092c   0x0000003a   Code   RO         1788    .text               mc_w.l(__dczerorl.o)
    0x00000966   0x00000966   0x00000002   PAD
    0x00000968   0x00000968   0x0000008c   Code   RO          119    .text.I2C0_Init     lcd.o
    0x000009f4   0x000009f4   0x00000044   Code   RO          139    .text.I2C0_WriteByte  lcd.o
    0x00000a38   0x00000a38   0x00000720   Code   RO           29    .text.ISRHandlers   main.o
    0x00001158   0x00001158   0x00000028   Code   RO          125    .text.LCD_Clear     lcd.o
    0x00001180   0x00001180   0x0000002a   Code   RO          123    .text.LCD_Cmd       lcd.o
    0x000011aa   0x000011aa   0x00000002   PAD
    0x000011ac   0x000011ac   0x0000002a   Code   RO          131    .text.LCD_Data      lcd.o
    0x000011d6   0x000011d6   0x00000002   PAD
    0x000011d8   0x000011d8   0x000000e2   Code   RO          117    .text.LCD_Init      lcd.o
    0x000012ba   0x000012ba   0x00000002   PAD
    0x000012bc   0x000012bc   0x00000022   Code   RO          129    .text.LCD_Print     lcd.o
    0x000012de   0x000012de   0x00000002   PAD
    0x000012e0   0x000012e0   0x0000003e   Code   RO          141    .text.LCD_PulseEnable  lcd.o
    0x0000131e   0x0000131e   0x00000002   PAD
    0x00001320   0x00001320   0x00000020   Code   RO          135    .text.LCD_SetBacklight  lcd.o
    0x00001340   0x00001340   0x00000030   Code   RO          127    .text.LCD_SetCursor  lcd.o
    0x00001370   0x00001370   0x0000002a   Code   RO          137    .text.LCD_Write4Bits  lcd.o
    0x0000139a   0x0000139a   0x00000002   PAD
    0x0000139c   0x0000139c   0x0000002c   Code   RO          121    .text.LCD_WriteNibble  lcd.o
    0x000013c8   0x000013c8   0x00000008   PAD
    0x000013d0   0x000013d0   0x00000064   Code   RO          481    .text.PendSV_Handler  port.o
    0x00001434   0x00001434   0x0000003a   Code   RO          102    .text.PortA_Config  ports_init.o
    0x0000146e   0x0000146e   0x00000002   PAD
    0x00001470   0x00001470   0x00000032   Code   RO          104    .text.PortC_Config  ports_init.o
    0x000014a2   0x000014a2   0x00000002   PAD
    0x000014a4   0x000014a4   0x00000070   Code   RO          108    .text.PortD_Config  ports_init.o
    0x00001514   0x00001514   0x00000072   Code   RO          106    .text.PortF_Config  ports_init.o
    0x00001586   0x00001586   0x0000000a   PAD
    0x00001590   0x00001590   0x00000024   Code   RO          465    .text.SVC_Handler   port.o
    0x000015b4   0x000015b4   0x0000001e   Code   RO          161    .text.SysTick_Handler  cmsis_os2.o
    0x000015d2   0x000015d2   0x00000002   PAD
    0x000015d4   0x000015d4   0x0000010c   Code   RO          394    .text.SystemInit    system_tm4c123.o
    0x000016e0   0x000016e0   0x000003e0   Code   RO           27    .text.main          main.o
    0x00001ac0   0x00001ac0   0x0000010e   Code   RO          634    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001bce   0x00001bce   0x00000002   PAD
    0x00001bd0   0x00001bd0   0x00000170   Code   RO          618    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001d40   0x00001d40   0x0000007e   Code   RO          796    .text.prvCheckForValidListAndQueue  timers.o
    0x00001dbe   0x00001dbe   0x00000002   PAD
    0x00001dc0   0x00001dc0   0x0000005a   Code   RO          668    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001e1a   0x00001e1a   0x00000002   PAD
    0x00001e1c   0x00001e1c   0x00000042   Code   RO          571    .text.prvCopyDataFromQueue  queue.o
    0x00001e5e   0x00001e5e   0x00000002   PAD
    0x00001e60   0x00001e60   0x000000c8   Code   RO          664    .text.prvCreateIdleTasks  tasks.o
    0x00001f28   0x00001f28   0x00000078   Code   RO          616    .text.prvCreateStaticTask  tasks.o
    0x00001fa0   0x00001fa0   0x0000008e   Code   RO          622    .text.prvCreateTask  tasks.o
    0x0000202e   0x0000202e   0x00000002   PAD
    0x00002030   0x00002030   0x0000003c   Code   RO          628    .text.prvDeleteTCB  tasks.o
    0x0000206c   0x0000206c   0x00000026   Code   RO          575    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x00002092   0x00002092   0x00000002   PAD
    0x00002094   0x00002094   0x00000040   Code   RO          842    .text.prvGetNextExpireTime  timers.o
    0x000020d4   0x000020d4   0x000000aa   Code   RO          495    .text.prvHeapInit   heap_4.o
    0x0000217e   0x0000217e   0x00000002   PAD
    0x00002180   0x00002180   0x0000003c   Code   RO          758    .text.prvIdleTask   tasks.o
    0x000021bc   0x000021bc   0x00000048   Code   RO          531    .text.prvInitialiseNewQueue  queue.o
    0x00002204   0x00002204   0x000000e6   Code   RO          754    .text.prvInitialiseNewTask  tasks.o
    0x000022ea   0x000022ea   0x00000002   PAD
    0x000022ec   0x000022ec   0x0000008e   Code   RO          756    .text.prvInitialiseTaskLists  tasks.o
    0x0000237a   0x0000237a   0x00000002   PAD
    0x0000237c   0x0000237c   0x000000d8   Code   RO          499    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x00002454   0x00002454   0x00000086   Code   RO          856    .text.prvInsertTimerInActiveList  timers.o
    0x000024da   0x000024da   0x00000002   PAD
    0x000024dc   0x000024dc   0x00000028   Code   RO          573    .text.prvIsQueueEmpty  queue.o
    0x00002504   0x00002504   0x00000028   Code   RO          473    .text.prvPortStartFirstTask  port.o
    0x0000252c   0x0000252c   0x00000054   Code   RO          850    .text.prvProcessExpiredTimer  timers.o
    0x00002580   0x00002580   0x0000014e   Code   RO          846    .text.prvProcessReceivedCommands  timers.o
    0x000026ce   0x000026ce   0x00000002   PAD
    0x000026d0   0x000026d0   0x0000009a   Code   RO          844    .text.prvProcessTimerOrBlockTask  timers.o
    0x0000276a   0x0000276a   0x00000002   PAD
    0x0000276c   0x0000276c   0x00000034   Code   RO          854    .text.prvReloadTimer  timers.o
    0x000027a0   0x000027a0   0x0000003c   Code   RO          626    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000027dc   0x000027dc   0x00000044   Code   RO          848    .text.prvSampleTimeNow  timers.o
    0x00002820   0x00002820   0x00000052   Code   RO          852    .text.prvSwitchTimerLists  timers.o
    0x00002872   0x00002872   0x00000002   PAD
    0x00002874   0x00002874   0x00000026   Code   RO          463    .text.prvTaskExitError  port.o
    0x0000289a   0x0000289a   0x00000002   PAD
    0x0000289c   0x0000289c   0x0000007c   Code   RO          658    .text.prvTaskIsTaskSuspended  tasks.o
    0x00002918   0x00002918   0x0000001e   Code   RO          798    .text.prvTimerTask  timers.o
    0x00002936   0x00002936   0x00000002   PAD
    0x00002938   0x00002938   0x000000ae   Code   RO          563    .text.prvUnlockQueue  queue.o
    0x000029e6   0x000029e6   0x00000002   PAD
    0x000029e8   0x000029e8   0x000001b6   Code   RO          493    .text.pvPortMalloc  heap_4.o
    0x00002b9e   0x00002b9e   0x00000002   PAD
    0x00002ba0   0x00002ba0   0x00000024   Code   RO          732    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002bc4   0x00002bc4   0x0000005e   Code   RO          461    .text.pxPortInitialiseStack  port.o
    0x00002c22   0x00002c22   0x00000002   PAD
    0x00002c24   0x00002c24   0x0000010c   Code   RO          734    .text.ulTaskGenericNotifyTake  tasks.o
    0x00002d30   0x00002d30   0x00000048   Code   RO          452    .text.uxListRemove  list.o
    0x00002d78   0x00002d78   0x0000000c   Code   RO          676    .text.uxTaskGetNumberOfTasks  tasks.o
    0x00002d84   0x00002d84   0x0000002a   Code   RO          748    .text.vApplicationGetIdleTaskMemory  tasks.o
    0x00002dae   0x00002dae   0x00000002   PAD
    0x00002db0   0x00002db0   0x0000002a   Code   RO          750    .text.vApplicationGetTimerTaskMemory  tasks.o
    0x00002dda   0x00002dda   0x00000002   PAD
    0x00002ddc   0x00002ddc   0x000000a0   Code   RO           47    .text.vApplicationIdleHook  main.o
    0x00002e7c   0x00002e7c   0x0000023c   Code   RO           35    .text.vDriverWindowElevateTask  main.o
    0x000030b8   0x000030b8   0x0000023a   Code   RO           37    .text.vDriverWindowLowerTask  main.o
    0x000032f2   0x000032f2   0x00000002   PAD
    0x000032f4   0x000032f4   0x00000284   Code   RO           25    .text.vEncoderTask  main.o
    0x00003578   0x00003578   0x0000002e   Code   RO          444    .text.vListInitialise  list.o
    0x000035a6   0x000035a6   0x00000002   PAD
    0x000035a8   0x000035a8   0x0000000e   Code   RO          446    .text.vListInitialiseItem  list.o
    0x000035b6   0x000035b6   0x00000002   PAD
    0x000035b8   0x000035b8   0x0000006a   Code   RO          450    .text.vListInsert   list.o
    0x00003622   0x00003622   0x00000002   PAD
    0x00003624   0x00003624   0x0000003a   Code   RO          448    .text.vListInsertEnd  list.o
    0x0000365e   0x0000365e   0x00000002   PAD
    0x00003660   0x00003660   0x00000158   Code   RO           39    .text.vLockWindows  main.o
    0x000037b8   0x000037b8   0x00000148   Code   RO           43    .text.vLowerLimitAction  main.o
    0x00003900   0x00003900   0x000001bc   Code   RO           45    .text.vObstacleDetection  main.o
    0x00003abc   0x00003abc   0x00000238   Code   RO           31    .text.vPassengerWindowElevateTask  main.o
    0x00003cf4   0x00003cf4   0x00000236   Code   RO           33    .text.vPassengerWindowLowerTask  main.o
    0x00003f2a   0x00003f2a   0x00000002   PAD
    0x00003f2c   0x00003f2c   0x00000014   Code   RO          471    .text.vPortEnableVFP  port.o
    0x00003f40   0x00003f40   0x00000030   Code   RO          477    .text.vPortEnterCritical  port.o
    0x00003f70   0x00003f70   0x00000026   Code   RO          479    .text.vPortExitCritical  port.o
    0x00003f96   0x00003f96   0x00000002   PAD
    0x00003f98   0x00003f98   0x00000076   Code   RO          497    .text.vPortFree     heap_4.o
    0x0000400e   0x0000400e   0x00000002   PAD
    0x00004010   0x00004010   0x00000044   Code   RO          469    .text.vPortSetupTimerInterrupt  port.o
    0x00004054   0x00004054   0x00000064   Code   RO          605    .text.vQueueWaitForMessageRestricted  queue.o
    0x000040b8   0x000040b8   0x0000004a   Code   RO          638    .text.vTaskDelay    tasks.o
    0x00004102   0x00004102   0x00000002   PAD
    0x00004104   0x00004104   0x00000024   Code   RO          702    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00004128   0x00004128   0x0000000e   Code   RO          706    .text.vTaskMissedYield  tasks.o
    0x00004136   0x00004136   0x00000002   PAD
    0x00004138   0x00004138   0x00000026   Code   RO          690    .text.vTaskPlaceOnEventList  tasks.o
    0x0000415e   0x0000415e   0x00000002   PAD
    0x00004160   0x00004160   0x00000064   Code   RO          694    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x000041c4   0x000041c4   0x00000138   Code   RO          728    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x000042fc   0x000042fc   0x00000108   Code   RO          656    .text.vTaskResume   tasks.o
    0x00004404   0x00004404   0x00000072   Code   RO          662    .text.vTaskStartScheduler  tasks.o
    0x00004476   0x00004476   0x00000002   PAD
    0x00004478   0x00004478   0x00000128   Code   RO          652    .text.vTaskSuspend  tasks.o
    0x000045a0   0x000045a0   0x00000010   Code   RO          632    .text.vTaskSuspendAll  tasks.o
    0x000045b0   0x000045b0   0x000000ba   Code   RO          654    .text.vTaskSwitchContext  tasks.o
    0x0000466a   0x0000466a   0x00000002   PAD
    0x0000466c   0x0000466c   0x00000146   Code   RO           41    .text.vUpperLimitAction  main.o
    0x000047b2   0x000047b2   0x00000002   PAD
    0x000047b4   0x000047b4   0x0000006c   Code   RO          467    .text.xPortStartScheduler  port.o
    0x00004820   0x00004820   0x0000003e   Code   RO          483    .text.xPortSysTickHandler  port.o
    0x0000485e   0x0000485e   0x00000002   PAD
    0x00004860   0x00004860   0x00000086   Code   RO          535    .text.xQueueGenericCreate  queue.o
    0x000048e6   0x000048e6   0x00000002   PAD
    0x000048e8   0x000048e8   0x0000006c   Code   RO          529    .text.xQueueGenericCreateStatic  queue.o
    0x00004954   0x00004954   0x000000d0   Code   RO          527    .text.xQueueGenericReset  queue.o
    0x00004a24   0x00004a24   0x000000c6   Code   RO          567    .text.xQueueGiveFromISR  queue.o
    0x00004aea   0x00004aea   0x00000002   PAD
    0x00004aec   0x00004aec   0x00000152   Code   RO          569    .text.xQueueReceive  queue.o
    0x00004c3e   0x00004c3e   0x00000002   PAD
    0x00004c40   0x00004c40   0x0000019e   Code   RO          553    .text.xQueueSemaphoreTake  queue.o
    0x00004dde   0x00004dde   0x00000002   PAD
    0x00004de0   0x00004de0   0x000000c4   Code   RO          704    .text.xTaskCheckForTimeOut  tasks.o
    0x00004ea4   0x00004ea4   0x00000052   Code   RO          620    .text.xTaskCreate   tasks.o
    0x00004ef6   0x00004ef6   0x00000002   PAD
    0x00004ef8   0x00004ef8   0x0000005c   Code   RO          614    .text.xTaskCreateStatic  tasks.o
    0x00004f54   0x00004f54   0x0000023c   Code   RO          740    .text.xTaskGenericNotifyFromISR  tasks.o
    0x00005190   0x00005190   0x00000038   Code   RO          722    .text.xTaskGetSchedulerState  tasks.o
    0x000051c8   0x000051c8   0x00000014   Code   RO          672    .text.xTaskGetTickCount  tasks.o
    0x000051dc   0x000051dc   0x0000025e   Code   RO          670    .text.xTaskIncrementTick  tasks.o
    0x0000543a   0x0000543a   0x00000002   PAD
    0x0000543c   0x0000543c   0x0000015c   Code   RO          724    .text.xTaskPriorityInherit  tasks.o
    0x00005598   0x00005598   0x00000194   Code   RO          696    .text.xTaskRemoveFromEventList  tasks.o
    0x0000572c   0x0000572c   0x0000023e   Code   RO          636    .text.xTaskResumeAll  tasks.o
    0x0000596a   0x0000596a   0x00000002   PAD
    0x0000596c   0x0000596c   0x00000078   Code   RO          794    .text.xTimerCreateTimerTask  timers.o
    0x000059e4   0x000059e4   0x00000006   Code   RO          880    i.GPIOIntClear      driverlib.lib(gpio.o)
    0x000059ea   0x000059ea   0x0000000c   Code   RO          882    i.GPIOIntEnable     driverlib.lib(gpio.o)
    0x000059f6   0x000059f6   0x0000001a   Code   RO          883    i.GPIOIntRegister   driverlib.lib(gpio.o)
    0x00005a10   0x00005a10   0x0000000e   Code   RO          885    i.GPIOIntStatus     driverlib.lib(gpio.o)
    0x00005a1e   0x00005a1e   0x00000050   Code   RO          887    i.GPIOIntTypeSet    driverlib.lib(gpio.o)
    0x00005a6e   0x00005a6e   0x00000006   Code   RO          893    i.GPIOPinRead       driverlib.lib(gpio.o)
    0x00005a74   0x00005a74   0x00000064   Code   RO         1213    i.IntEnable         driverlib.lib(interrupt.o)
    0x00005ad8   0x00005ad8   0x00000028   Code   RO         1224    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x00005b00   0x00005b00   0x00000034   Code   RO         1225    i.IntRegister       driverlib.lib(interrupt.o)
    0x00005b34   0x00005b34   0x00000004   Code   RO         1376    i.SysCtlSleep       driverlib.lib(sysctl.o)
    0x00005b38   0x00005b38   0x00000050   Code   RO          923    i._GPIOIntNumberGet  driverlib.lib(gpio.o)
    0x00005b88   0x00005b88   0x00000034   Code   RO         1706    i.__0snprintf       mc_w.l(printfa.o)
    0x00005bbc   0x00005bbc   0x0000000e   Code   RO         1782    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00005bca   0x00005bca   0x00000002   Code   RO         1783    i.__scatterload_null  mc_w.l(handlers.o)
    0x00005bcc   0x00005bcc   0x0000000e   Code   RO         1784    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00005bda   0x00005bda   0x00000002   PAD
    0x00005bdc   0x00005bdc   0x00000184   Code   RO         1712    i._fp_digits        mc_w.l(printfa.o)
    0x00005d60   0x00005d60   0x000006dc   Code   RO         1713    i._printf_core      mc_w.l(printfa.o)
    0x0000643c   0x0000643c   0x00000024   Code   RO         1714    i._printf_post_padding  mc_w.l(printfa.o)
    0x00006460   0x00006460   0x0000002e   Code   RO         1715    i._printf_pre_padding  mc_w.l(printfa.o)
    0x0000648e   0x0000648e   0x00000016   Code   RO         1716    i._snputc           mc_w.l(printfa.o)
    0x000064a4   0x000064a4   0x00000228   Data   RO          924    .constdata          driverlib.lib(gpio.o)
    0x000066cc   0x000066cc   0x0000010c   Data   RO         1229    .constdata          driverlib.lib(interrupt.o)
    0x000067d8   0x000067d8   0x00000234   Data   RO           68    .rodata.str1.1      main.o
    0x00006a0c   0x00006a0c   0x00000005   Data   RO          786    .rodata.str1.1      tasks.o
    0x00006a11   0x00006a11   0x00000008   Data   RO          859    .rodata.str1.1      timers.o
    0x00006a19   0x00006a19   0x00000003   PAD
    0x00006a1c   0x00006a1c   0x00000004   Data   RO          777    .rodata.uxTopUsedPriority  tasks.o
    0x00006a20   0x00006a20   0x00000020   Data   RO         1781    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00006c00, Size: 0x000032c8, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00000020])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW          396    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW           69    .data.encoderPos    main.o
    0x20000008   COMPRESSED   0x00000001   Data   RW          143    .data.lcd_backlight  lcd.o
    0x20000009   COMPRESSED   0x00000003   PAD
    0x2000000c   COMPRESSED   0x00000004   Data   RW          485    .data.uxCriticalNesting  port.o
    0x20000010   COMPRESSED   0x00000004   Data   RW           50    .data.window_state  main.o
    0x20000014   COMPRESSED   0x000003ec   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW         1230    vtable              driverlib.lib(interrupt.o)
    0x2000066c   COMPRESSED   0x00000004   PAD
    0x20000670        -       0x00000001   Zero   RW           71    .bss.driver_elevate_button_state  main.o
    0x20000671        -       0x00000001   Zero   RW           73    .bss.driver_lower_button_state  main.o
    0x20000672   COMPRESSED   0x00000002   PAD
    0x20000674        -       0x00000004   Zero   RW           70    .bss.encoderDirection  main.o
    0x20000678        -       0x00000001   Zero   RW           77    .bss.ir_sensor_state  main.o
    0x20000679   COMPRESSED   0x00000003   PAD
    0x2000067c        -       0x00000004   Zero   RW           80    .bss.lastEncoderTime  main.o
    0x20000680        -       0x00000004   Zero   RW           51    .bss.last_task      main.o
    0x20000684        -       0x00000001   Zero   RW           76    .bss.lock_state     main.o
    0x20000685        -       0x00000001   Zero   RW           79    .bss.lower_limit_switch_state  main.o
    0x20000686        -       0x00000001   Zero   RW           72    .bss.operation      main.o
    0x20000687        -       0x00000001   Zero   RW           74    .bss.passenger_elevate_button_state  main.o
    0x20000688        -       0x00000001   Zero   RW           75    .bss.passenger_lower_button_state  main.o
    0x20000689        -       0x00000050   Zero   RW          867    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x200006d9   COMPRESSED   0x00000003   PAD
    0x200006dc        -       0x00000050   Zero   RW          866    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x2000072c        -       0x00000004   Zero   RW          863    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000730        -       0x00000004   Zero   RW          760    .bss.pxCurrentTCB   tasks.o
    0x20000734        -       0x00000004   Zero   RW          861    .bss.pxCurrentTimerList  timers.o
    0x20000738        -       0x00000004   Zero   RW          767    .bss.pxDelayedTaskList  tasks.o
    0x2000073c        -       0x00000004   Zero   RW          513    .bss.pxEnd          heap_4.o
    0x20000740        -       0x00000004   Zero   RW          768    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000744        -       0x00000004   Zero   RW          862    .bss.pxOverflowTimerList  timers.o
    0x20000748        -       0x00000460   Zero   RW          771    .bss.pxReadyTasksLists  tasks.o
    0x20000ba8        -       0x00002000   Zero   RW          519    .bss.ucHeap         heap_4.o
    0x20002ba8        -       0x00000001   Zero   RW           78    .bss.upper_limit_switch_state  main.o
    0x20002ba9   COMPRESSED   0x00000003   PAD
    0x20002bac        -       0x00000004   Zero   RW          765    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002bb0        -       0x00000004   Zero   RW          764    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002bb4        -       0x00000004   Zero   RW          773    .bss.uxSchedulerSuspended  tasks.o
    0x20002bb8        -       0x00000004   Zero   RW          761    .bss.uxTaskNumber   tasks.o
    0x20002bbc        -       0x00000004   Zero   RW          772    .bss.uxTopReadyPriority  tasks.o
    0x20002bc0        -       0x00000200   Zero   RW          781    .bss.vApplicationGetIdleTaskMemory.uxIdleTaskStack  tasks.o
    0x20002dc0        -       0x0000005c   Zero   RW          780    .bss.vApplicationGetIdleTaskMemory.xIdleTaskTCB  tasks.o
    0x20002e1c        -       0x00000140   Zero   RW          783    .bss.vApplicationGetTimerTaskMemory.uxTimerTaskStack  tasks.o
    0x20002f5c        -       0x0000005c   Zero   RW          782    .bss.vApplicationGetTimerTaskMemory.xTimerTaskTCB  tasks.o
    0x20002fb8        -       0x00000014   Zero   RW          864    .bss.xActiveTimerList1  timers.o
    0x20002fcc        -       0x00000014   Zero   RW          865    .bss.xActiveTimerList2  timers.o
    0x20002fe0        -       0x00000014   Zero   RW          784    .bss.xDelayedTaskList1  tasks.o
    0x20002ff4        -       0x00000014   Zero   RW          785    .bss.xDelayedTaskList2  tasks.o
    0x20003008        -       0x00000004   Zero   RW           52    .bss.xDriverWindowElevateTaskHandle  main.o
    0x2000300c        -       0x00000004   Zero   RW           60    .bss.xDriverWindowElevateTaskUnlockerSemaphore  main.o
    0x20003010        -       0x00000004   Zero   RW           53    .bss.xDriverWindowLowerTaskHandle  main.o
    0x20003014        -       0x00000004   Zero   RW           61    .bss.xDriverWindowLowerTaskUnlockerSemaphore  main.o
    0x20003018        -       0x00000004   Zero   RW           49    .bss.xEncoderTaskHandle  main.o
    0x2000301c        -       0x00000004   Zero   RW          514    .bss.xFreeBytesRemaining  heap_4.o
    0x20003020        -       0x00000004   Zero   RW          776    .bss.xIdleTaskHandles  tasks.o
    0x20003024        -       0x00000004   Zero   RW           57    .bss.xLockWindowsTaskHandle  main.o
    0x20003028        -       0x00000004   Zero   RW           64    .bss.xLockWindowsTaskUnlockerSemaphore  main.o
    0x2000302c        -       0x00000004   Zero   RW           59    .bss.xLowerLimitActionHandle  main.o
    0x20003030        -       0x00000004   Zero   RW           67    .bss.xLowerLimitUnlockerSemaphore  main.o
    0x20003034        -       0x00000004   Zero   RW          516    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20003038        -       0x00000004   Zero   RW          775    .bss.xNextTaskUnblockTime  tasks.o
    0x2000303c        -       0x00000004   Zero   RW          779    .bss.xNumOfOverflows  tasks.o
    0x20003040        -       0x00000004   Zero   RW          517    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20003044        -       0x00000004   Zero   RW          518    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20003048        -       0x00000004   Zero   RW           56    .bss.xObsatcleDetectionHandle  main.o
    0x2000304c        -       0x00000004   Zero   RW           65    .bss.xObstacleDetectionUnlockerSemaphore  main.o
    0x20003050        -       0x00000004   Zero   RW           54    .bss.xPassengerWindowElevateTaskHandle  main.o
    0x20003054        -       0x00000004   Zero   RW           62    .bss.xPassengerWindowElevateTaskUnlockerSemaphore  main.o
    0x20003058        -       0x00000004   Zero   RW           55    .bss.xPassengerWindowLowerTaskHandle  main.o
    0x2000305c        -       0x00000004   Zero   RW           63    .bss.xPassengerWindowLowerTaskUnlockerSemaphore  main.o
    0x20003060        -       0x00000004   Zero   RW          778    .bss.xPendedTicks   tasks.o
    0x20003064        -       0x00000014   Zero   RW          769    .bss.xPendingReadyList  tasks.o
    0x20003078        -       0x00000004   Zero   RW          762    .bss.xSchedulerRunning  tasks.o
    0x2000307c        -       0x00000008   Zero   RW          515    .bss.xStart         heap_4.o
    0x20003084        -       0x00000014   Zero   RW          770    .bss.xSuspendedTaskList  tasks.o
    0x20003098        -       0x00000014   Zero   RW          763    .bss.xTasksWaitingTermination  tasks.o
    0x200030ac        -       0x00000004   Zero   RW          766    .bss.xTickCount     tasks.o
    0x200030b0        -       0x00000004   Zero   RW          858    .bss.xTimerQueue    timers.o
    0x200030b4        -       0x00000004   Zero   RW          860    .bss.xTimerTaskHandle  timers.o
    0x200030b8        -       0x00000004   Zero   RW           58    .bss.xUpperLimitActionHandle  main.o
    0x200030bc        -       0x00000004   Zero   RW           66    .bss.xUpperLimitUnlockerSemaphore  main.o
    0x200030c0        -       0x00000004   Zero   RW          774    .bss.xYieldPendings  tasks.o
    0x200030c4   COMPRESSED   0x00000004   PAD
    0x200030c8        -       0x00000200   Zero   RW          380    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        30          0          0          0          0      29913   cmsis_os2.o
       942          0          0          0       8220       4606   heap_4.o
       820          0          0          1          0       8408   lcd.o
       296          0          0          0          0       2421   list.o
      7338          0        564          8         89       7692   main.o
       652         16          0          4          0       3026   port.o
       334          0          0          0          0        923   ports_init.o
      1890          0          0          0          0      14969   queue.o
       252         10        620          0        512       5540   startup_tm4c123.o
       268          0          0          4          0       6875   system_tm4c123.o
      6666          6          9          0       2296      27318   tasks.o
      1248         10          8          0        220      11287   timers.o

    ----------------------------------------------------------------------
     20856         42       1236       1024      11352     122978   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       120          0          3       1007         15          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        38          0          0          0          0        572   cpu.o
       224         18        552          0          0       9321   gpio.o
       192         20        268        620          0       2679   interrupt.o
         4          0          0          0          0        450   sysctl.o
        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
      2300         84          0          0          0        524   printfa.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
       334          0          0          0          0        148   dadd.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        48          0          0          0          0         68   dfixul.o
       228          0          0          0          0         96   dmul.o

    ----------------------------------------------------------------------
      4288        138        820        620          4      14822   Library Totals
         8          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       458         38        820        620          0      13022   driverlib.lib
      2756        100          0          0          0       1144   mc_w.l
      1066          0          0          0          0        656   mf_w.l

    ----------------------------------------------------------------------
      4288        138        820        620          4      14822   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     25144        180       2056       1644      11356     136248   Grand Totals
     25144        180       2056         32      11356     136248   ELF Image Totals (compressed)
     25144        180       2056         32          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                27200 (  26.56kB)
    Total RW  Size (RW Data + ZI Data)             13000 (  12.70kB)
    Total ROM Size (Code + RO Data + RW Data)      27232 (  26.59kB)

==============================================================================

